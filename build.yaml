apiVersion: builds.katanomi.dev/v1alpha1
kind: Build
spec:
  workspaces:
    - description: |
        This workspace is shared among all the pipeline tasks to read/write common resources
      name: source
  tasks:
    - name: generate-version
      workspaces:
        - name: source
          workspace: source
      taskSpec:
        description: generate version from tag or built-in version
        workspaces:
          - name: source
            workspace: source
        params:
          - name: revision-type
            type: string
          - name: revision-id
            type: string
          - name: version-docker
            type: string
        results:
          - name: version
            type: string
        steps:
          - name: generate-version
            image: docker-mirrors.alauda.cn/library/alpine:1.24
            imagePullPolicy: IfNotPresent
            workingDir: $(workspaces.source.path)
            script: |
              #!/bin/sh
              if [ "$(params.revision-type)" == "Tag" ]; then
                echo -n "$(params.revision-id)" > $(results.version.path)
              else
                echo -n "$(params.version-docker)" > $(results.version.path)
              fi
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
      params:
        - name: revision-type
          value: $(build.git.revision.type)
        - name: revision-id
          value: $(build.git.revision.id)
        - name: version-docker
          value: $(build.git.version.docker)
      timeout: 0m
      retries: 0
      when: []
    - name: alauda-build-image
      timeout: 30m
      runAfter:
        - generate-version
      retries: 0
      taskRef:
        kind: ClusterTask
        name: alauda-build-image
      workspaces:
        - name: source
          workspace: source
      when: []
      params:
        - name: container-image
          value: build-harbor.alauda.cn/3rdparty/argoproj/argocd
        - name: container-image-tag
          value: $(tasks.generate-version.results.version)
        - name: dockerfile
          value: ./Dockerfile.alauda
        - name: labels
          value:
            - branch=$(build.git.branch.name)
            - commit=$(build.git.lastCommit.id)
        - name: build-extra-args
          value:
            --build-arg=BASE_IMAGE=registry.access.redhat.com/ubi8/ubi-minimal:latest
            --build-arg=GO_IMAGE=docker-mirrors.alauda.cn/library/golang:1.24
            --build-arg=NODE_IMAGE=build-harbor.alauda.cn/acp/base/node:23.0.0
    - name: sonarqube-analysis
      timeout: 30m
      retries: 0
      taskRef:
        resolver: katanomi.hub
        params:
          - name: kind
            value: task
          - name: name
            value: sonarqube-analysis
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - alauda-build-image
      when: []
      params:
        - name: server
          value: https://build-sonar.alauda.cn
  git:
    options:
      depth: 1
      timeout: 20m
      retries: 3
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
  runTemplate:
    spec:
      taskRunSpecs: []
